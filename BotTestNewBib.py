import config
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

class ClientState(StatesGroup):
    '''–•—Ä–∞–Ω–∏—Ç –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–ª–∏–µ–Ω—Ç'''
    START_ORDER = State()
    CITY_SELECTED = State()
    RESTAURANT_SELECTED = State()
    DISH_SELECTED = State()
    DRINK_SELECTED = State()
    PROCCESS_ORDER = State()
    NONE_STATE = State()
    TEAM_STATE = State()

bot = Bot(token=config.TOKEN)

# storage = RedisStorage2('localhost', 6379, db=5, pool_size=10, prefix='my_fsm_key')
# storage = MongoStorage(host='localhost', port=27017, db_name='aiogram_fsm')
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage) 

@dp.message_handler(commands=['Go'])
async def start_proccess(message: types.Message, state: FSMContext) -> None:
    msg = '''–ü—Ä–∏–≤–µ—Ç! üëãü§ñ –Ø –±–æ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã! –í –∫–∞–∫–æ–º —Ç—ã –≥–æ—Ä–æ–¥–µ?'''
    
    msk_btn = KeyboardButton('–ú–æ—Å–∫–≤–∞')
    spb_btn = KeyboardButton('–°–ü–ë')
    voronezh_btn = KeyboardButton('–í–æ—Ä–æ–Ω–µ–∂')
    lipetsk_btn = KeyboardButton('–õ–∏–ø–µ—Ü–∫')
    
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(msk_btn, spb_btn) 
    markup.row(voronezh_btn, lipetsk_btn) 
            
    await message.answer(msg, reply_markup=markup)
    await state.set_state(ClientState.START_ORDER)

@dp.message_handler(commands=['start'])
async def welcome(message: types.Message, state: FSMContext) -> None:
    sti = open('static/welcome.webp', 'rb')
    await bot.send_sticker(message.chat.id, sti)

    await bot.send_message(message.chat.id, "–ù–∞ —Å–≤—è–∑–∏ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ç–≤–æ–π —Ö–æ–¥. –≠—Ç–æ –±–æ—Ç –õ—ë—Ö–∞.\n–û–Ω –æ—á–µ–Ω—å –¥–æ–±—Ä—ã–π.".format(message.from_user, bot.get_me()), parse_mode='html')
    await bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è –æ–Ω –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞–º –∫–≤–µ—Å—Ç! –ü–∏—à–∏—Ç–µ —Å—é–¥–∞ —Å–ª–æ–≤–∞ —Å –∫–æ—Ä–æ–±–æ–∫ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è.".format(message.from_user, bot.get_me()), parse_mode='html')
    await state.set_state(ClientState.NONE_STATE)

@dp.message_handler(content_types=['text'])
async def Task(message):
	if((message.text == "–ö–æ–º–∞–Ω–¥–∞") or (message.text == "–∫–æ–º–∞–Ω–¥–∞")):
		await bot.send_message(message.chat.id, "_\"–ß–µ–ª–æ–≤–µ–∫ ‚Äì —Å—É—â–µ—Å—Ç–≤–æ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ\"_ - —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏–ª–∏ –Ω–∞–º –Ω–∞ —É—Ä–æ–∫–∞—Ö –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—è. –ê –º—ã –∏ –Ω–µ —Å–ø–æ—Ä–∏–º!\n\n*–ó–∞–¥–∞–Ω–∏–µ:*\n\n–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–µ—Ç–µ—Å—å –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–æ–π _(–≥—Ä—É–ø–ø–æ–π)_ –∏ –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ —Å—é–¥–∞ –≤ —á–∞—Ç. –ú—ã —Å–¥–µ–ª–∞–µ–º —Ü–µ–ª—ã–π –∫–æ–ª–ª–∞–∂ —Ñ–æ—Ç–æ, –∏ –ø–æ–¥–µ–ª–∏–º—Å—è —É —Å–µ–±—è –≤ –≥—Ä—É–ø–ø–µ.\n–ó–∞—Ö–æ–¥–∏ –∏ —Å–º–æ—Ç—Ä–∏: [—Å—Å—ã–ª–∫–∞](https://vk.com/tvoyhod33)".format(message.from_user, bot.get_me()), parse_mode='Markdown')
	elif(message.text == "–û–ø—Ä–µ–¥–µ–ª—è—é" or message.text == "–æ–ø—Ä–µ–¥–µ–ª—è—é"):
		await bot.send_message(message.chat.id, "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç—É [\"–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤\"](https://vk.com/konstruktiv_official).\n–†–µ–±—è—Ç–∞ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è –ø–æ–ø—É–ª—è—Ä–∏–∑–∞—Ü–∏–µ–π –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π —Ñ–æ—Ä–º–µ. –°–µ–π—á–∞—Å –æ–Ω–∏ –ø—Ä–æ–≤–æ–¥—è—Ç —Ä–æ–∑—ã–≥—Ä—ã—à, [—É—á–∞—Å—Ç–≤—É–π](https://vk.com/wall-221131579_44).\n–ú—ã –º–æ–∂–µ–º –±–æ–ª—å—à–µ, –∫–æ–≥–¥–∞ –º—ã –≤–º–µ—Å—Ç–µ!\n\n*–ó–∞–¥–∞–Ω–∏–µ:*\n\n–ß—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–ª–æ–¥—ë–∂–∏ –≤ –Ω–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ? _–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –∏–¥–µ–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ_. –ê –º—ã —Å –ú–æ–ª–æ–¥—ë–∂–Ω—ã–º —Å–æ–≤–µ—Ç–æ–º –ø–æ–¥—É–º–∞–µ–º –Ω–∞–¥ –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π!".format(message.from_user, bot.get_me()), parse_mode='Markdown')
	elif(message.text == "–≠–Ω–µ—Ä–≥–∏—è" or message.text == "—ç–Ω–µ—Ä–≥–∏—è"):
		await bot.send_message(message.chat.id, "–°–æ–≤—Å–µ–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å —Å —á–µ–ª–æ–≤–µ–∫–æ–º –æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ, –∏–Ω–æ–≥–¥–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å –Ω–∏–º. –ê –≤—ã –∫–∞–∫ –¥—É–º–∞–µ—Ç–µ?\n\n*–ó–∞–¥–∞–Ω–∏–µ:*\n\n–°–Ω–∏–º–∏ –≤–∏–¥–µ–æ-—Ç–∞–Ω–µ—Ü, –∫–∞–∫ –≤ [–ø—Ä–∏–º–µ—Ä–µ](https://drive.google.com/file/d/1N49aQ8zEm_9Y8YylONO21IuGeCNkFSrS/view?usp=drive_link).** –û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ** —Å–æ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º. –ê –º—ã –ø–æ–∑–∂–µ —Å–æ–±–µ—Ä—ë–º –≤–∏–¥–µ–æ –∏ –≤—ã–ª–æ–∂–∏–º —É –Ω–∞—Å –≤ —Å–æ—Ü —Å–µ—Ç—è—Ö: [—Å—Å—ã–ª–∫–∞](https://vk.com/tvoyhod33)".format(message.from_user, bot.get_me()), parse_mode='Markdown')
	elif(message.text == "–õ–∏–¥–µ—Ä" or message.text == "–ª–∏–¥–µ—Ä"):
		await bot.send_message(message.chat.id, "–õ–∏–¥–µ—Ä–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ª—é–±–≤–∏, –∞ –ª—é–±–≤–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏–¥–µ—Ä–æ–≤.\n\n*–ó–∞–¥–∞–Ω–∏–µ:*\n\n–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ —Å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º –¢–≤–æ–π –•–æ–¥. _–†–∞–∑—É–∑–Ω–∞—Ç—å –∫—Ç–æ —ç—Ç–æ –∏–∑ —Ä–µ–±—è—Ç –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å–∞–º–æ–º—É_.\n–°–∫–æ—Ä–µ–π –∑–Ω–∞–∫–æ–º—å—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π –∏ –¥–µ–ª–∞–π —Ñ–æ—Ç–æ, –ø—Ä–∏—Å—ã–ª–∞–π –µ–≥–æ –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º!".format(message.from_user, bot.get_me()), parse_mode='Markdown')
	elif(message.text == "–°–º—ã—Å–ª" or message.text == "—Å–º—ã—Å–ª"):
		await bot.send_message(message.chat.id, "–í –æ–∂–∏–¥–∞–Ω–∏–∏ —á—É–¥–∞ –¥–µ–ª–∞–π –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞. –¢–æ–≥–¥–∞ –∏ —á—É–¥–æ –ø—Ä–∏–¥–µ—Ç –∫ —Ç–µ–±–µ –Ω–µ —Å –ø—É—Å—Ç—ã–º–∏ —Ä—É–∫–∞–º–∏. –¢–∞–∫–æ–π –ø—Ä–∏–Ω—Ü–∏–ø —É –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã. –ö–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ –∫–∞–∫ –∑–≤—É—á–∏—Ç —Å–º—ã—Å–ª –ø—Ä–æ–µ–∫—Ç–∞ –¢–≤–æ–π –•–æ–¥?\n\n*–ó–∞–¥–∞–Ω–∏–µ:*\n\n–†–∞—Å—à–∏—Ñ—Ä—É–π—Ç–µ —Ñ—Ä–∞–∑—É —Å –ê–∑–±—É–∫–∏ –ú–æ—Ä–∑–µ –∏ –ø—Ä–∏—Å—ã–ª–∞–π –≤ —á–∞—Ç, –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º.".format(message.from_user, bot.get_me()), parse_mode='Markdown')
		task = open('static/task.jpg', 'rb')
		await bot.send_photo(message.chat.id, task)
		ABC = open('static/ABC.jpg', 'rb')
		await bot.send_photo(message.chat.id, ABC)
	elif(message.text == "–î–µ–ª–∞—é" or message.text == "–¥–µ–ª–∞—é"):
		await bot.send_message(message.chat.id, "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç—É [\"–ü–æ–ª—é–±–∏ –∂–∏–∑–Ω—å –∑–∞–Ω–æ–≤–æ\"](http://lovelifeanew.tk.tilda.ws/). –†–µ–±—è—Ç–∞ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤, —á—Ç–æ–±—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –¥–æ—Å—É–≥ –¥–ª—è –¥–µ—Ç–µ–π, –ø–æ—Å–µ—â–∞—é—â–∏—Ö —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã –∏ –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –Ω–∞ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–º –ª–µ—á–µ–Ω–∏–∏.\n\n*–ó–∞–¥–∞–Ω–∏–µ:*\n\n–ù–∞—Ä–∏—Å—É—Ç–µ –º–∏–Ω–∏ –æ—Ç–∫—Ä—ã—Ç–∫—É –¥–ª—è –¥–µ—Ç–µ–π. –ê –∫–æ–º–∞–Ω–¥–∞ –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤ –ø–æ–¥–∞—Ä–∏—Ç –∏—Ö —Ä–µ–±—è—Ç–∞–º. –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –µ—ë –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –≤ —á–∞—Ç.".format(message.from_user, bot.get_me()), parse_mode='Markdown')
	elif(message.text == "–ñ–∏–≤—É –∏ —Å–æ–∑–¥–∞—é –≤ –†–æ—Å—Å–∏–∏" or message.text == "–∂–∏–≤—É –∏ —Å–æ–∑–¥–∞—é –≤ –†–æ—Å—Å–∏–∏" or message.text == "–ñ–∏–≤—É –∏ —Å–æ–∑–¥–∞—é –≤ —Ä–æ—Å—Å–∏–∏" or message.text == "–∂–∏–≤—É –∏ —Å–æ–∑–¥–∞—é –≤ —Ä–æ—Å—Å–∏–∏"):
		await bot.send_message(message.chat.id, "–í–µ—Ä–Ω–æ, –º—ã –º–æ–∂–µ–º –±–æ–ª—å—à–µ –∫–æ–≥–¥–∞ –º—ã –≤–º–µ—Å—Ç–µ!".format(message.from_user, bot.get_me()), parse_mode='Markdown')

@dp.message_handler(state=ClientState.NONE_STATE, content_types=['photo']) 
async def handle_photo(message: types.Message, state: FSMContext):
	# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
    await state.update_data(CITY=True)
    username = message.from_user.username 
    photo_info = message.photo[-1] 
    file_id = photo_info.file_id
	# –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
    file_info = await bot.get_file(file_id) 
    file_url = f"https://api.telegram.org/file/bot{config.TOKEN}/{file_info.file_path}"
    await bot.send_message(885468895, 'Hello 1!' + file_url)
    await message.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Ñ–æ—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!")
    
    await state.set_state(ClientState.TEAM_STATE)

@dp.message_handler(state=ClientState.TEAM_STATE, content_types=['photo']) 
async def handle_photo(message: types.Message, state: FSMContext):
	# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ 
    await state.update_data(CITY=True)
    username = message.from_user.username 
    photo_info = message.photo[-1] 
    file_id = photo_info.file_id
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ 
    file_info = await bot.get_file(file_id) 
    file_url = f"https://api.telegram.org/file/bot{config.TOKEN}/{file_info.file_path}"
    await bot.send_message(885468895, 'Hello 2!' + file_url)
    await message.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Ñ–æ—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!")

    await state.set_state(ClientState.NONE_STATE)
     
@dp.message_handler(state=ClientState.START_ORDER)
async def choose_restoraunts_process(message: types.Message, state: FSMContext):
    user_msg = message.text
    await state.update_data(CITY=user_msg)
    
    dragon_rest_btn = KeyboardButton('–ö–∏—Ç–∞–π—Å–∫–∏–π –¥—Ä–∞–∫–æ–Ω')
    pylounge_rest_btn = KeyboardButton('PyLounge')
    
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(dragon_rest_btn, pylounge_rest_btn) 
            
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ', reply_markup=markup)
    await state.set_state(ClientState.CITY_SELECTED) 


@dp.message_handler(state=ClientState.CITY_SELECTED)
async def dish_process(message: types.Message, state: FSMContext):
    user_msg = message.text
    await state.update_data(RESTAURANT=user_msg)
    
    soup_menu_btn = KeyboardButton('–°—É–ø')
    nosoup_menu_btn = KeyboardButton('–ù–µ —Å—É–ø')
    
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(soup_menu_btn, nosoup_menu_btn) 
            
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ', reply_markup=markup)
    await state.set_state(ClientState.RESTAURANT_SELECTED) 


@dp.message_handler(state=ClientState.RESTAURANT_SELECTED)
async def drink_process(message: types.Message, state: FSMContext):
    user_msg = message.text
    await state.update_data(DISH=user_msg)
    
    cola_menu_btn = KeyboardButton('–ö–æ–ª–∞')
    more_cool_cola_menu_btn = KeyboardButton('–¢–æ–∂–µ –∫–æ–ª–∞ –Ω–æ –†–£–°–°–ö–ê–Ø!')
    
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(cola_menu_btn, more_cool_cola_menu_btn) 
            
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫', reply_markup=markup)
    await state.set_state(ClientState.DISH_SELECTED)
    
    
@dp.message_handler(state=ClientState.DISH_SELECTED)
async def order_process(message: types.Message, state: FSMContext):
    user_msg = message.text
    await state.update_data(DRINK=user_msg)
    
    proccess_btn = KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
    cancel_btn = KeyboardButton('–û—Ç–º–µ–Ω–∞')
    
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(proccess_btn, cancel_btn) 
            
    await message.answer('–ú—ã –ø–æ—á—Ç–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏', reply_markup=markup)
    await state.set_state(ClientState.DRINK_SELECTED)      

@dp.message_handler(state=ClientState.DRINK_SELECTED)
async def finish_process(message: types.Message, state: FSMContext):
    user_msg = message.text
    if user_msg == '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑':
        user_state_data = await state.get_data()
        city = user_state_data['CITY']
        rest = user_state_data['RESTAURANT']
        dish = user_state_data['DISH']
        drink = user_state_data['DRINK']
        msg = f'''–í–∞—à –∑–∞–∫–∞–∑: {dish} {drink} –∏–∑ {rest} ({city}) –û–§–û–†–ú–õ–ï–ù!!!'''
        await message.answer(msg)
    else:
        await message.answer('–ü–æ–∫–∞(')
    await state.finish()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)